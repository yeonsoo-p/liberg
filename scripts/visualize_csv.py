#!/usr/bin/env python3
"""
Simple visualization script for result.csv generated by test_erg
"""

import pandas as pd
import matplotlib.pyplot as plt
from pathlib import Path

def plot_csv(csv_path="result.csv"):
    """Plot signals from CSV file."""

    if not Path(csv_path).exists():
        print(f"Error: {csv_path} not found")
        print("Run test_erg first to generate the CSV file")
        return

    # Read CSV
    df = pd.read_csv(csv_path)

    print(f"Loaded {len(df)} samples from {csv_path}")
    print(f"Columns: {', '.join(df.columns)}")

    # Calculate frequency from Time signal
    if 'Time' in df.columns and len(df) >= 2:
        dt = df['Time'].iloc[1] - df['Time'].iloc[0]
        freq = 1.0 / dt
        print(f"Sampling frequency: {freq:.3f} Hz (dt = {dt:.6f} s)")
        print(f"Time range: {df['Time'].iloc[0]:.3f} to {df['Time'].iloc[-1]:.3f} seconds")

    # Get all columns except 'Time'
    signal_columns = [col for col in df.columns if col != 'Time']

    if not signal_columns:
        print("Error: No signal columns found (only Time column present)")
        return

    # Create subplots based on number of signals
    n_signals = len(signal_columns)
    fig, axes = plt.subplots(n_signals, 1, figsize=(12, 2.5 * n_signals), sharex=True)
    fig.suptitle('CSV Data Visualization', fontsize=14, fontweight='bold')

    # Handle single subplot case (axes is not an array)
    if n_signals == 1:
        axes = [axes]

    # Plot each signal
    colors = plt.cm.tab10(range(n_signals))
    for idx, col in enumerate(signal_columns):
        axes[idx].plot(df['Time'], df[col], color=colors[idx], linewidth=1)
        axes[idx].set_ylabel(col)
        axes[idx].grid(True, alpha=0.3)
        axes[idx].set_title(col)

    axes[-1].set_xlabel('Time [s]')

    plt.tight_layout()

    # Save plot
    output_path = Path(csv_path).with_suffix('.png')
    plt.savefig(output_path, dpi=150, bbox_inches='tight')
    print(f"\nPlot saved to: {output_path}")

    # Show plot
    plt.show()

if __name__ == "__main__":
    import sys

    csv_path = sys.argv[1] if len(sys.argv) > 1 else "result_avx2.csv"
    plot_csv(csv_path)
